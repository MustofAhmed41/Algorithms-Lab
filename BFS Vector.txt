#include <bits/stdc++.h>

using namespace std;
queue <int>q;
vector< vector <int> > input(200);
vector<int> isVisited(200,0);

void inputGraph(int nodes, int edges){
    for(int i = 1;i<=nodes+1 ;i++){  // +1 to avoid a garbage value at the row end of the vectors
        for(int j = 1;j<=nodes+1;j++){
            input[i].push_back(0);
        }
    }
    int n1,n2;
    for(int i = 1;i<=edges;i++){
        cin >> n1 >> n2;
        input[n1][n2] = 1;
        input[n2][n1] = 1;
    }
}


void printGraph(int nodes){
    for(int i = 1; i <= nodes; i++){
        for(int j = 1; j <= nodes; j++){
            cout << input[i][j] << " ";
        }
        cout << endl;
    }
}

int main(){
    int nodes, edges;
    cin >> nodes >> edges;
    inputGraph(nodes,edges);
    printGraph(nodes);
    int x = 0;
    q.push(1);
    isVisited[q.front()] = 1;
    while(!q.empty()){
        int temp = q.front();
        q.pop();
        cout << temp <<" ";
        for(int j=1;j<=nodes;j++){
            //cout << input[temp][j] << " " << isVisited[temp] << endl;
            if(input[temp][j]==1 && isVisited[j]==0){
                q.push(j);
                isVisited[j] = 1;
            }
        }
    }


    return 0;
}